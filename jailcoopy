#!/bin/bash
# ----------------------------------------------------------------------
#	Copyright (c) 2014
#
#	This program is free software; you can redistribute it and/or
#	modify it under the terms of version 3 of the GNU General Public
#	License published by the Free Software Foundation.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
# ----------------------------------------------------------------------
# Authors:
#	Alex V Kotelnikov (aka gudron) <gudron@gudron.me>
#
# Repository:
#	https://github.com/gudron/jailcoopy
#
# /usr/local/bin/jailcoopy

BIN_NAME=""
JAIL_ROOT=""
LIST=""

usage() {
	echo "USAGE: $0 -n <BINARY_NAME> -j <JAIL_ROOT>"
	echo -e "Options:"
	echo -e "\t-n <BINARY_NAME>\tBinary application name.\t Example: bash, sh, rsync"
	echo -e "\t-j <JAIL_ROOT>\t\tJailroot path.\t\t\t Example: /home/virtualhosts/example.dev	"
}

printError() {
	echo "[!] Invalid option" && usage && exit 1
}

function copyToJail {
	dirPath=`dirname $1`
	echo "copy $1 to $JAIL_ROOT$dirPath"		
	mkdir -p $JAIL_ROOT$dirPath
	cp $1 $JAIL_ROOT$dirPath
}

function findSoLibrary () {
	while IFS= read -r line
	do
		libName=`echo "$line" | awk '{print $1}'`
		libPath=`echo "$line" | awk '{print $3}'`

		if [ -s $libPath ] && [ -f $libPath ] && [ -e $libPath ] && [ ! -z "$libPath" -a "$libPath" != " " ]
		then
			copyToJail $libPath
		else
			if [ -s $libName ] && [ -f $libName ] && [ -e $libName ]
			then
				copyToJail $libName
			fi
		fi
	done <<< "$filesToCopy"

}

function copyBinFile () {
	local fileName=$1
	local fileExtension=""
	#binPath=`whereis $fileName | awk '{print $2}'`
	local binPath=`whereis $fileName`
	local binName=""
	IFS=' ' read -a nameArray <<< "$binPath"
	unset nameArray[0]
	for element in "${nameArray[@]}"
	do
		if [ -f "$element" ]
		then
			binName=`basename "$element"`
			mimeType=`file -h --mime-type "$element" | awk '{print $2}'`
			case $mimeType in
				"inode/symlink" ) ;;
				"application/x-executable" ) 
				
				;;
				* ) 
				copyToJail $element;;
			esac
		fi
	done
}

function main () {
	if [ $LIST != "" ]
	then
		IFS=',' read -a binNameArray <<< "$LIST"
		for element in "${binNameArray[@]}"
		do
			copyBinFile "$element"
		done
	else
		copyBinFile "$BIN_NAME"
	fi
}

while getopts "n:j:l:" Option; do
	case $Option in
			n ) BIN_NAME="$OPTARG";;
			j ) JAIL_ROOT="$OPTARG";;
			l ) LIST="$OPTARG";;
			* ) printError;;
	esac
done

if [ "$JAIL_ROOT" != "" ] && { [ $LIST != "" ] || [ "$BIN_NAME" != ]; } then
	main
else
	printError
fi

exit 0